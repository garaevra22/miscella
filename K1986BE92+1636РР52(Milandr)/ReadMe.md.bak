# Библиотека для работы с отечественной ИМС ЭППЗУ (флэш 128К х 8) 1636РР52 по интерфейсу SPI в 
# системе на базе отечественного микроконтроллера (МК) K1986BE92QI (MILANDR). 
# Автор - Р.А.Гараев: garaevra@mail.ru. 
# Компилятор:  arm-none-eabi-gcc.exe (ARM GCC Compiler из IDE Em::Blocks 2.30). Возможно 
# использование компилятора Armcc из пакета Keil uVision 4-5.
#
# В библиотеке использованы частично модифицированные автором с целью достижения полной 
# работоспособности функции, заимствованные из  
https://github.com/StartMilandr/MDR_Pack_v6/tree/master/PACK_Gen/Files/Examples/All_Boards/1636RR52_Test, 
# а также из найденного в интернете в 2021 г., ныне отсутствующего архива "1636РР52.rar" 
# неизвестного автора. 
# ИМС 1636РР52 позволяет электрически стирать (переводить биты в состояние "лог.1") элементы 
# размером не менее 1 сектора. В ИМС имеется только 2 сектора с объемом по 64Kбайта, что 
# сильно затрудняет реализацию традиционной файловой подсистемы, например, типа FAT с быстрыми 
# операциями поиска/чтения/записи/стирания файлов при ограниченых ресурсах свободного ОЗУ МК.
# Разработанные функции (см. раздел "функции для работы с блоками из флэш" в 1636RR52.c) 
# позволяют с минимальными затратами ОЗУ и времени сохранять, стирать, искать и читать не 
# файлы, а информационные блоки по принципу, схожему с применяемым на CD-ROM и ленточных 
# накопителях, т.е. память ИМС рассматривается как массив с последовательным, а не 
# произвольным доступом.   
# Каждый новый блок пишется в чистую область ЭППЗУ(размер блока ограничен 128 байтами, но
# может быть произвольно изменен, см. epromBl в заголовочном файле 1636RR52.h). 
# "Устаревший" (заменяемый новым) блок с меньшим начальным адресом физически не стирается, 
# а помечается как удаленный в 4-хбайтном заголовке, предшествующем инфоблоку. Таблицы FAT 
# и каталоги отсутствуют. Блоки вместо имен идентифицируются типом и атрибутом, входящими в
# заголовок (см. epromBlHd в 1636RR52.h). Номера типов - в диапазоне от 1 до 0xfe.  
#------------------------------------------------

# При практическом использовании библиотеки необходимо создать проект Em::Blocks (или 
# Keil uVision, включив в него файлы библиотеки *.c 
# и прочие необходимые собственные файлы, а также файлы драйверов. 
# Для возможности работы с ИМС ЭППЗУ вначале необходимо выполнить вызовы функций: 
///--------- Инициализация SPI и таймера --------
 conf_Tim();  //настройка таймера MDR_TIMER3 для формирования больших задержек 
//  Фактически начало инициализации RR52
 MDR_RR52_InitDelays(80E+6);///Тактовая частота МК считается 80 МГц
 U_1636RR52_Init();
  
# При использовании одноименных с библиотечными заголовочных заголовочных файлов *.h  
# прототипы функций 
///---- Прототипы функций настройки таймера и инициализации SPI -----
void conf_Tim(void);
void  U_1636RR52_Init(void);
void MDR_RR52_InitDelays(uint32_t CPU_FregHz);
# будут найдены там. 
# В случае, если в разрабатываемом коде MDR_TIMER3 необходимо использовать для каких-либо
# иных целей, соответствующие фрагменты типа 
      strtDlay(...); wtDlayFin(); 
# в ряде функций из 1636RR52.c должны быть преобразованы с использованием соответствующих 
# аналогов void MDR_Delay(uint32_t Ticks) из MDR_Funcs.c на базе простого программного цикла.
# После завершения инициализации в программе можно использовать функции работы с 
# информационными блоками из раздела "функции для работы с блоками из флэш" из файла
# "1636RR52.c":

# поиск очередного неудаленного блока для чтения и формирование смещения до следующего
int16_t seek4Blk2R(uint32_t *Offset, uint32_t *NxtOff);
# считать тело (данные) блока в Buf1636r
int16_t rdBlk(uint32_t BlOff, uint16_t C); //При ошибке CRC return -1
# поиск начальной точки для записи нового блока
 int16_t seekFree(void);
# Запись нового блока в EEPROM со смещения wrBlOff из буфера Buf1636w
 int16_t wrBlk2Free(void);
# Запись/модификация заголовка блока EEPROM со смещения BlOff из буфера Hdr
 void mdfBlkHdr(uint32_t BlOff, epromThd *Hdr, uint16_t NS);
# Замена блока заданного типа на аналогичный с новым содержимым ("перезапись")
  int16_t rplceBlk(uint8_t type, uint8_t attrib);

# Переменные для непосредственной работы с 1635RR52 объявлены в файле "1636RR52.c":
//буферы для работы с ИМС флэш 1635RR52
 epromBl Buf1636w, Buf1636r; // write/read, функции - в конце файла
 uint32_t rdBlOff; //смещение в байтах до начала блока перед чтением
 uint32_t wrBlOff; //смещение в байтах до начала блока перед записью
 uint32_t nextOff = 0; //смещение в байтах до начала следующего блока при поиске

 epromThd tmpHdr; //заголовок для модификации блоков, например, стирания блока.


